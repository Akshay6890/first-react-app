{"version":3,"sources":["Navbar.js","Create.js","BlogList.js","useFetch.js","Home.js","Blog.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","Create","useState","title","setTitle","body","setBody","author","setAuthor","state","setState","history","useHistory","onSubmit","e","preventDefault","blog","fetch","method","headers","JSON","stringify","then","push","type","required","placeholder","value","onChange","target","rows","cols","disabled","BlogList","blogs","map","id","useFetch","url","abortCont","AbortController","data","setData","status","setStatus","error","setError","useEffect","signal","res","ok","json","Error","catch","name","message","abort","Home","Blog","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAciBA,EAZF,WACX,OACE,sBAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,OAAvB,2BACA,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,6B,cCwDKC,EA7DA,WAAO,IAAD,EAESC,mBAAS,IAFlB,mBAEVC,EAFU,KAEHC,EAFG,OAGOF,mBAAS,IAHhB,mBAGVG,EAHU,KAGJC,EAHI,OAIWJ,mBAAS,SAJpB,mBAIVK,EAJU,KAIFC,EAJE,OAKSN,oBAAS,GALlB,mBAKVO,EALU,KAKHC,EALG,KAOXC,EAAUC,cAiBhB,OACE,sBAAKb,UAAU,SAAf,UACE,gDACA,uBAAMc,SAlBM,SAACC,GACbA,EAAEC,iBACFL,GAAS,GACT,IAAMM,EAAO,CAAEb,QAAOI,SAAQF,QAC9BY,MAAM,uEAAuE,CACzEC,OAAQ,OACRC,QAAS,CAAE,eAAiB,oBAC5Bd,KAAMe,KAAKC,UAAUL,KAExBM,MAAK,WACFZ,GAAS,GACTC,EAAQY,KAAK,SAOjB,UACE,uBACEC,KAAK,OACLC,UAAQ,EACRC,YAAY,aACZC,MAAOxB,EACPyB,SAAU,SAACd,GAAD,OAAOV,EAASU,EAAEe,OAAOF,UAErC,0BACEF,UAAQ,EACRC,YAAY,YACZI,KAAK,KACLC,KAAK,MACLJ,MAAOtB,EACPuB,SAAU,SAACd,GAAD,OAAOR,EAAQQ,EAAEe,OAAOF,UAEpC,yBACEA,MAAOpB,EACPqB,SAAU,SAACd,GAAD,OAAON,EAAUM,EAAEe,OAAOF,QAFtC,UAIE,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,uBAEClB,GAAS,8CACVA,GAAS,wBAAQuB,UAAQ,EAAhB,mCCvCNC,EAhBE,SAAC,GAAiB,IAAdC,EAAa,EAAbA,MAEjB,OACI,qBAAKnC,UAAU,WAAf,SACKmC,EAAMC,KAAI,SAACnB,GAAD,OACP,eAAC,IAAD,CAAMhB,GAAE,gBAAWgB,EAAKoB,IAAMrC,UAAU,eAAxC,UACI,6BAAMiB,EAAKb,QACX,6CAAiBa,EAAKT,UACtB,yBAHyDS,EAAKoB,UCiCnEC,EAtCE,SAACC,GAEd,IAAMC,EAAY,IAAIC,gBAFA,EAIEtC,mBAAS,MAJX,mBAIfuC,EAJe,KAITC,EAJS,OAKKxC,oBAAS,GALd,mBAKfyC,EALe,KAKRC,EALQ,OAMG1C,mBAAS,MANZ,mBAMf2C,EANe,KAMTC,EANS,KAkCvB,OA1BCC,qBAAU,WAsBR,OArBA9B,MAAMqB,EAAK,CAACU,OAAQT,EAAUS,SAC7B1B,MAAK,SAAA2B,GACJ,GAAIA,EAAIC,GAIN,OAAOD,EAAIE,OAHX,MAAMC,MAAM,6BAA6Bd,MAM5ChB,MAAK,SAAAmB,GACJC,EAAQD,GACRG,GAAU,GACVE,EAAS,SAEVO,OAAM,SAAAvC,GACW,eAAXA,EAAEwC,OACDV,GAAU,GACVE,EAAShC,EAAEyC,aAIZ,kBAAMhB,EAAUiB,WAExB,CAAClB,IAEI,CAAEG,OAAOI,QAAOF,WCpBTc,EAbJ,WAAO,IAAD,EAEqBpB,EAAS,wEAAjCH,EAFG,EAETO,KAAaI,EAFJ,EAEIA,MAAOF,EAFX,EAEWA,OAE1B,OACE,sBAAK5C,UAAU,OAAf,UACI8C,GAAS,qBAAK9C,UAAU,YAAf,SAA6B8C,IACtCF,GAAU,qBAAK5C,UAAU,SAAf,wBACXmC,GAAS,cAAC,EAAD,CAAUA,MAAOA,QCwBpBwB,EAhCF,WAAO,IAERtB,EAAOuB,cAAPvB,GACFzB,EAAUC,cAHD,EAKgByB,EAAS,wEAAwED,GAAxGK,EALO,EAKPA,KAAMI,EALC,EAKDA,MAAOF,EALN,EAKMA,OAWrB,OACI,sBAAK5C,UAAU,YAAf,UACM8C,GAAS,qBAAK9C,UAAU,YAAf,SAA6B8C,IACtCF,GAAU,qBAAK5C,UAAU,SAAf,wBACV0C,GACE,sBAAK1C,UAAU,OAAf,UACI,oBAAIA,UAAU,aAAd,SAA6B0C,EAAKtC,QAClC,qBAAIJ,UAAU,cAAd,wBAAyC0C,EAAKlC,UAC9C,mBAAGR,UAAU,YAAb,SAA2B0C,EAAKpC,OAChC,wBAAQN,UAAU,cAAc6D,QAlB3B,WACjB3C,MAAM,wEAAwEmB,EAAG,CAC7ElB,OAAQ,WAEXI,MAAK,WACFX,EAAQY,KAAK,SAaL,2BCjBLsC,EATE,WACb,OACI,sBAAK9D,UAAU,YAAf,UACI,oBAAIA,UAAU,iBAAd,kDACA,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAAvB,4CC2BG+D,MA1Bf,WACE,OACE,cAAC,IAAD,UACE,sBAAK/D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBCnBdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.47dbbb6a.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Link to=\"/\" className=\"logo\">The Dojo Blog</Link>\r\n        <div className=\"links\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/create\">New Blog</Link>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n   \r\n  export default Navbar;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('Mario');\r\n    const [state, setState] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const addBlog = (e) =>{\r\n        e.preventDefault();\r\n        setState(true);\r\n        const blog = { title, author, body };\r\n        fetch('https://my-json-server.typicode.com/Akshay6890/first-react-app/blogs',{\r\n            method: 'POST',\r\n            headers: { 'Content-Type' : 'application/json'},\r\n            body: JSON.stringify(blog)\r\n        })\r\n        .then(() =>{\r\n            setState(false);\r\n            history.push('/');\r\n        });\r\n    }\r\n  \r\n    return (\r\n      <div className=\"create\">\r\n        <h2>Add a New Blog</h2>\r\n        <form onSubmit={addBlog}>\r\n          <input \r\n            type=\"text\" \r\n            required\r\n            placeholder=\"Blog Title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <textarea\r\n            required\r\n            placeholder=\"Blog Body\"\r\n            rows=\"10\"\r\n            cols=\"100\"\r\n            value={body}\r\n            onChange={(e) => setBody(e.target.value)}\r\n          ></textarea>\r\n          <select\r\n            value={author}\r\n            onChange={(e) => setAuthor(e.target.value)}\r\n          >\r\n            <option value=\"Mario\">Mario</option>\r\n            <option value=\"Yoshi\">Yoshi</option>\r\n            <option value=\"Akshay\">Akshay</option>\r\n            <option value=\"Vikas\">Vikas</option>\r\n            <option value=\"Vamsi\">Vamsi</option>\r\n          </select>\r\n          { !state && <button>Add Blog</button> }\r\n          { state && <button disabled>Adding Blog...</button> }\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Create;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ( { blogs } ) => {\r\n    \r\n    return (\r\n        <div className=\"bloglist\">\r\n            {blogs.map((blog) => (\r\n                <Link to={`/blog/${blog.id}`} className=\"blog-preview\" key={ blog.id }>\r\n                    <h2>{ blog.title }</h2>\r\n                    <h4>Written by { blog.author }</h4>\r\n                    <br></br>\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\n \r\nexport default BlogList ;","import { useState, useEffect} from 'react';\r\n\r\nconst useFetch = (url) => {\r\n\r\n    const abortCont = new AbortController();\r\n    \r\n    const [data, setData] = useState(null);\r\n    const [status,setStatus] = useState(true);\r\n    const [error,setError] = useState(null);\r\n\r\n    useEffect(() =>{\r\n      fetch(url, {signal: abortCont.signal})\r\n      .then(res => {\r\n        if(!res.ok){\r\n          throw Error('Oops! Invalid Resource... '+url);\r\n        }\r\n        else{\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        setData(data);\r\n        setStatus(false);\r\n        setError(null);\r\n      })\r\n      .catch(e => {\r\n          if(e.name !== 'AbortError'){\r\n              setStatus(false);\r\n              setError(e.message);\r\n          }\r\n      });\r\n\r\n      return () => abortCont.abort();\r\n\r\n   },[url]);\r\n\r\n   return { data , error, status}\r\n\r\n}\r\n\r\nexport default useFetch;","import BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\n\r\nconst Home = () => {\r\n\r\n   const {data: blogs, error, status} = useFetch('https://my-json-server.typicode.com/Akshay6890/first-react-app/blogs');\r\n\r\n    return (\r\n      <div className=\"home\">\r\n        { error && <div className=\"error-msg\">{ error }</div> }\r\n        { status && <div className=\"status\">Loading...</div> }\r\n        {blogs && <BlogList blogs={blogs} /> }\r\n      </div>\r\n    );\r\n  }\r\n   \r\n  export default Home;","import { useHistory, useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Blog = () => {\r\n\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    const { data, error, status} = useFetch('https://my-json-server.typicode.com/Akshay6890/first-react-app/blogs/'+id);\r\n\r\n    const handleDelete = () => {\r\n        fetch('https://my-json-server.typicode.com/Akshay6890/first-react-app/blogs/'+id,{\r\n            method: 'DELETE'\r\n        })\r\n        .then(() =>{\r\n            history.push('/');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"blog-page\">\r\n            { error && <div className=\"error-msg\">{ error }</div>}\r\n            { status && <div className=\"status\">Loading...</div>}\r\n            { data && (\r\n                <div className=\"blog\">\r\n                    <h2 className=\"blog-title\">{ data.title }</h2>\r\n                    <h4 className=\"blog-author\">Written by { data.author }</h4>\r\n                    <p className=\"blog-body\">{ data.body }</p>\r\n                    <button className=\"blog-delete\" onClick={handleDelete}>Delete</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Blog;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h2 className=\"not-found-head\">Looks like you are lost üôÅ</h2>\r\n            <Link to=\"/\" className=\"not-found-msg\">Take me back to home page.</Link>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\r\nimport Create from './Create';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Blog from './Blog';\r\nimport NotFound from './NotFound';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <Create />\r\n            </Route>\r\n            <Route path=\"/blog/:id\">\r\n              <Blog />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}